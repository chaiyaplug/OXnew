{"version":3,"sources":["database/firebase.js","database/insertgame.js","component/Box.js","component/header.js","component/Showgame.js","component/login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","GoogleAuthProvider","firestore","Insertgame","props","users","newgameid","sIndex","index","statusnumber","collection","add","gameid","isend","xpoint","ypoint","timegame","Date","Box","Repeat","items","i","numTimes","push","children","Box1","onClick","className","XOput","bind","id","state","board","checkAdult","status","shuffle","array","randomIndex","currentIndex","length","Math","floor","random","temparrayboard","Array","tempcount","tempcount2","tempcount3","newboard","slice","setState","previousstate","result","filter","console","log","alert","check","check3","check4","f","k","newi","newy","Newboard","map","subItems","xmark","ymark","tempboard","a","parseInt","this","x","fill","row","y","prevProps","React","Component","header","Header","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Divider","Showgame","Fetchlistgame","temparray","user","toISOString","uid","Changevideo","e","target","value","arraymaprange","userid","max","newxclick","previosprop","where","get","then","doc","temparraynew","forEach","data","orderid","ypointdoc","catch","err","for","class","login","tempusers","onChange","changeusers","clickchangeusers","App","Changeuser","Firstmenu","inputMode","b","Validate","oncheck","Check","newyclick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.079b03d3.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyAAzmZKF-HHUJwQj9jyiaEWFIQ_3MexdcA\",\r\n//     authDomain: \"ttest-faedd.firebaseapp.com\",\r\n//     databaseURL: \"https://ttest-faedd-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n//     projectId: \"ttest-faedd\",\r\n//     storageBucket: \"ttest-faedd.appspot.com\",\r\n//     messagingSenderId: \"924557979276\",\r\n//     appId: \"1:924557979276:web:49258872d35031fd7695a9\",\r\n//     measurementId: \"G-929NVF3KPG\"\r\n//   };\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDxq6mrk4tcjyinpHlh4HZQLmr4ewQPZtM\",\r\n  authDomain: \"test-4d493.firebaseapp.com\",\r\n  projectId: \"test-4d493\",\r\n  storageBucket: \"test-4d493.appspot.com\",\r\n  messagingSenderId: \"266221728601\",\r\n  appId: \"1:266221728601:web:74623dd5c91e38c782d248\",\r\n  measurementId: \"G-ZM9RZBQV64\"\r\n};\r\n  export const firebaseApp=firebase.initializeApp(firebaseConfig)\r\n  export const googleprovider=new firebase.auth.GoogleAuthProvider()\r\n  export default firebaseApp.firestore()","import React from 'react'\r\n\r\nimport firestore from '../database/firebase'\r\n import firebase from 'firebase/app'\r\n\r\nconst  Insertgame=(props,users,newgameid,sIndex,index,statusnumber)=>{\r\n\r\n                                        firestore.collection(\"game\").add(\r\n                                            {\r\n                                                gameid:newgameid,\r\n                                            isend:props.gameid,\r\n                                            users:users,\r\n                                            statusnumber:statusnumber,\r\n                                            xpoint:sIndex,\r\n                                            ypoint:index,\r\n                                            timegame:new Date()\r\n                                        }\r\n                                            )                                                                     \r\n                        }               \r\n                        export default Insertgame\r\n                          // .then((doc)=>\r\n                                                                        // {\r\n                                                                        //     var temparray=0\r\n                                                                        //                         doc.forEach(doc=>\r\n                                                                        //                             {\r\n                                                                                                        \r\n                                                                        //                                 console.log(doc.id)\r\n                                                                        //                                 console.log(doc.data())\r\n                                                                        //                                 this.setState()\r\n                                                                                            \r\n                                                                        //                                 console.log(doc.data().gameid)\r\n                                                                        //                                 console.log(doc.data().orderid)\r\n                                                                        //                                 console.log(doc.data().statusnumber)\r\n                                                                        //                                 temparray +=1\r\n                                                                        //                                 this.setState(temparray=>[temparray,doc.data()])\r\n                                                                                                        \r\n                                                                                                    \r\n                                                                        //                              } )    \r\n                                                                        //   })\r\n\r\n                                                                                    \r\n                                                                       \r\n                                                                        //                 .catch((err)=>\r\n                                                                        //                 {\r\n                                                                        //                     alert(err)\r\n                                                                        //                 }     )     ","\r\n    \r\nimport Insertgame from '../database/insertgame'\r\nimport React from 'react'\r\nclass Box extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.Repeat=this.Repeat.bind(this)\r\n        this.Newboard=this.Newboard.bind(this)\r\n        this.state={\r\n           xmark:3,\r\n           ymark:3,\r\n          board :[],\r\n          tempboard:[],\r\n          gameid:\"\",\r\n          isend:\"\",\r\n          statusnumber:\"\",\r\n          ypoint:\"\",\r\n          xpoint:\"\",\r\n          timegame:\"\"\r\n        }  \r\n        \r\n        }\r\n        componentDidMount(){\r\n          \r\n         const a = Array(parseInt(this.props.x)).fill(null).map(row => new Array(parseInt(this.props.y)).fill(null))\r\n         this.setState({board:a})\r\n        }\r\n        \r\n        componentDidUpdate(prevProps){\r\n          \r\n              if(prevProps.x!==this.props.x && prevProps.y!==this.props.y){\r\n          const a = Array(parseInt(this.props.x)).fill(null).map(row => new Array(parseInt(this.props.y)).fill(null))\r\n          this.setState({board:a})\r\n              }\r\n                  \r\n         }\r\n       Repeat=(props) =>{\r\n\r\n          let items = [];\r\n          for (let i = 0; i < props.numTimes; i++) {\r\n            items.push(props.children(i));\r\n          }\r\n          return <>{items}</>;\r\n        }\r\n        Box1=({children,onClick,index,sIndex})=>{ \r\n          return(\r\n              <>\r\n            <div key={sIndex+\" \"+index} className=\"box1\" onClick={this.XOput.bind(this,sIndex,index)} id={sIndex+\"+\"+index}  >\r\n                                          <span id={sIndex+\"_\"+index} className=\"ox\">\r\n                                          {this.state.board[sIndex][index]}\r\n                                          </span>\r\n                                          </div>\r\n            \r\n            </>\r\n            )\r\n          }\r\n          checkAdult= (status) =>{\r\n            return status!==null;\r\n          }\r\n          \r\n           shuffle=(array)=> {\r\n            var currentIndex = array.length,  randomIndex;\r\n          \r\n            // While there remain elements to shuffle...\r\n            while (0 !== currentIndex) {\r\n          \r\n              // Pick a remaining element...\r\n              randomIndex = Math.floor(Math.random() * currentIndex);\r\n              currentIndex--;\r\n          \r\n              // And swap it with the current element.\r\n              [array[currentIndex], array[randomIndex]] = [\r\n                array[randomIndex], array[currentIndex]];\r\n            }\r\n          \r\n            return array;\r\n          }         \r\n          XOput=(sIndex,index)=>{\r\n         \r\n            const temparrayboard=new Array()\r\n            const endgame = false\r\n            var tempcount=0\r\n            var tempcount2=0\r\n            var tempcount3=0\r\n            if( this.state.board[sIndex][index]===null && this.state.board[sIndex][index]!==\"o\"){\r\n             \r\n                                    const newboard = this.state.board.slice() //copy the array\r\n                                  \r\n                                    newboard[sIndex][index] = 'x' //execute the manipulations\r\n                                    this.setState({board: newboard}) //set the new state\r\n\r\n                                    this.setState(previousstate=>({xpoint:sIndex,ypoint:index,statusnumber:\"x\",isend:0,timegame:new Date()}))      \r\n                                    Insertgame(this.state,this.props.users,this.props.newgameid,sIndex,index, newboard[sIndex][index])\r\n\r\n                                    const result = this.state.board[sIndex].filter(i => i === \"x\").length;\r\n                                    console.log('number of the found elements: ' + result);\r\n                                    if(result===this.state.board[sIndex].length){\r\n                                      alert(\"ผู้ชนะคือ x\")\r\n                                    }\r\n              for(var check=0;check<this.state.board.length;check++)\r\n              {\r\n                                                                if(this.state.board[check][index]===\"x\")\r\n                                                                {\r\n                                                                              tempcount++\r\n                                                                                if(tempcount===this.state.board.length)\r\n                                                                                {\r\n                                                                                  alert(\"ผู้ชนะคือ x\")\r\n                                                                                }\r\n                                                                  }\r\n              }\r\n              for(var check3=0;check3<this.state.board.length;check3++)\r\n              {\r\n                                    if(this.state.board[check3][check3]===\"x\")\r\n                                    {\r\n                                      tempcount2++\r\n                                      if(tempcount2===this.state.board.length)\r\n                                      {\r\n                                        alert(\"ผู้ชนะคือ x\")\r\n                                      }\r\n                                    }\r\n              }\r\n              for(var check4=this.state.board.length,f=0;check4>0;check4--,f++)         \r\n              {\r\n\r\n                                if(this.state.board[f][check4-1]===\"x\")\r\n                                    {\r\n                                              \r\n                                              tempcount3++\r\n                                              console.log(\"counttempcount3:\"+tempcount3)\r\n                                              if(tempcount3===this.state.board.length)\r\n                                              {\r\n                                                alert(\"ผู้ชนะคือ x\")\r\n                                              }\r\n                                    }\r\n                }\r\n                                                                          for(var i =0;i<this.state.board.length;i++){\r\n                                                                                  for( var k=0;k<this.state.board[i].length;k++){\r\n                                                                                                              if(this.state.board[i][k]!==\"x\"&&this.state.board[i][k]!==\"o\"){\r\n                                                                                                              temparrayboard.push({newi:i,newy:k})                                                                        \r\n                                                                                                             \r\n                                                                                                              }                                                                                   \r\n                                                                                       }\r\n                                                                         }\r\n                                                                                  if(temparrayboard.length>1){\r\n                                                                                            this.shuffle(temparrayboard)\r\n                                                                                      newboard[temparrayboard[0].newi][temparrayboard[0].newy]=\"o\"\r\n                                                                                      this.setState({board:newboard})\r\n                                                                                      this.setState(previousstate=>({xpoint:sIndex,ypoint:index,statusnumber:\"o\",isend:0,timegame:new Date()}))      \r\n                                                                                        Insertgame(this.state,this.props.users,this.props.newgameid,sIndex,index,newboard[temparrayboard[0].newi][temparrayboard[0].newy])\r\n                                                                                            }\r\n                                                                                    else \r\n                                                                                      {\r\n                                                                                        newboard[temparrayboard[0].newi][temparrayboard[0].newy]=\"o\"\r\n                                                                                        this.setState({board:newboard})\r\n                                                                                          alert(\"จบเกม ไม่มีผู้ชนะ\")\r\n                                                                                        }   \r\n                                                                                           \r\n             if(temparrayboard==null){\r\n             alert(\"จบเกม ไม่มีผู้ชนะ\")\r\n             }\r\n           }\r\n          }\r\n                      Newboard=()=>{\r\n                        return (\r\n                            <div>\r\n                              {this.state.board.map((items, index) => {         \r\n                                return (\r\n                                  <div className=\"d-flex \" key={index}>\r\n                                    {items.map((subItems, sIndex) => {\r\n                                      return (          \r\n                                     \r\n                                        <this.Box1 index={index} sIndex={sIndex}>\r\n                                         </this.Box1>\r\n                                     \r\n                                      )\r\n                                    })}\r\n                                  </div>\r\n                                );\r\n                              })}\r\n                            </div>\r\n                        );\r\n\r\n                      }        \r\n      render(){\r\n                        return(\r\n                          <div className=\"d-flex overflow-scroll\">\r\n                          <this.Newboard  />\r\n                          </div>\r\n                        )\r\n        \r\n            }\r\n}       \r\n        export default Box\r\n\r\n","import React from 'react'\r\nimport {Navbar, Nav,NavDropdown} from 'react-bootstrap'\r\n// import {LinkContainer} from 'react-router-bootstrap'\r\n\r\n\r\n\r\nclass header extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.Header=this.Header.bind(this)\r\n    }\r\n          Header=()=>{\r\n        \r\n        return (\r\n            <div>\r\n                  <Navbar bg=\"light\" expand=\"lg\">\r\n                  <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n                  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                  <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                  <Nav.Link href=\"#link\">Link</Nav.Link>\r\n                  <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n                       <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                                                   <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                                          <NavDropdown.Divider />\r\n                                              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                                         </NavDropdown>\r\n                  </Navbar.Collapse>\r\n                  </Navbar>  \r\n            </div>                                          )\r\n           }\r\n\r\n                render(){\r\n                    return(\r\n                        <this.Header/>\r\n                    )\r\n                }\r\n    \r\n}\r\n\r\nexport default header","\r\nimport React from 'react'\r\nimport axios from 'axios'\r\nimport firestore from '../database/firebase'\r\n import firebase from 'firebase/app'\r\nclass Showgame extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n            this.state={\r\n                max:this.props.newxclick,\r\n                users:this.props.users,\r\n                temparray:[\r\n                   { userid:\"\",\r\n                    gameid:\"\",\r\n                    timegame:null\r\n                }\r\n                ]\r\n            }\r\n            this.arraymaprange=this.arraymaprange.bind(this)\r\n            this.Changevideo=this.Changevideo.bind(this)\r\n            this.Fetchlistgame=this.Fetchlistgame.bind(this)\r\n    }   \r\n    \r\n    // componentDidMount(){\r\n\r\n    //     // firestore.collection(\"users\").where(\"numbergame\",\"==\",this.props.gameid).get().then((res)=>{\r\n    //         // firestore.collection(\"users\").get()\r\n    //         // firestore.collection(\"game\").where(\"userid\",\"==\",this.state.user).get()\r\n    //         firestore.collection(\"game\").where(\"users\",\"==\",this.props.users).orderBy(\"timegame\", \"asc\").get()\r\n    //         .then((doc)=>{\r\n    //                     let temparraynew=[]\r\n    //                         doc.forEach(doc=>\r\n    //                             {\r\n    //                                 // console.log(doc.id)\r\n    //                                 //  console.log(doc.data().userid)\r\n    //                                 //  var a =doc.data().timegame\r\n    //                                 //  console.log(a.tostring())\r\n    //                                 // this.setState({...this.state.temparray,userid:doc.data().userid,gameid:doc.data().gameid})\r\n    //                             //    console.log(doc.data().timegame.toString())\r\n                               \r\n    //                                 temparraynew=[...temparraynew,{userid:doc.data().users,gameid:doc.data().gameid,statusnumber:doc.data().statusnumber,xpoint:doc.data().xpoint,ypoint:doc.data().ypointdoc,timegame:doc.data().timegame}]\r\n    //                             //    let date= new Date(this.state.timegame)\r\n    //                             })\r\n    //                             this.setState({temparray:temparraynew})\r\n    //                             console.log(this.state.temparray)\r\n    //                             // this.arraymaprange()\r\n    //                      }   \r\n    //               )\r\n    //       .catch((err)=>\r\n    //             {\r\n    //               alert(err)\r\n    //             })     \r\n    //      }\r\n\r\n         componentDidUpdate(previosprop){\r\n            // console.log(previostate.newxclick,this.props.newxclick)\r\n            // alert(\"pereviosprops\"+previosprop.users)\r\n            // alert(\"this.state.users\"+this.props.users)\r\n            if(previosprop.users!==this.props.users){\r\n                console.log(\"showgame:\"+this.props.users)\r\n                    // this.setState({max:this.props.newxclick})\r\n                    firestore.collection(\"game\").where(\"users\",\"==\",this.props.users).get()\r\n                .then((doc)=>{\r\n                    let temparraynew=[]\r\n                                doc.forEach(doc=>\r\n                                    {\r\n                                        \r\n                                        console.log(doc.id)\r\n                                        console.log(doc.data())\r\n                                        this.setState()\r\n                               \r\n                                        console.log(doc.data().gameid)\r\n                                        console.log(doc.data().orderid)\r\n                                        console.log(doc.data().statusnumber)\r\n                                        // temparraynew +=1\r\n                                        temparraynew=[...temparraynew,{userid:doc.data().users,gameid:doc.data().gameid,statusnumber:doc.data().statusnumber,xpoint:doc.data().xpoint,ypoint:doc.data().ypointdoc,timegame:doc.data().timegame}]\r\n                                        this.setState({temparray:temparraynew})\r\n                                         \r\n                                      \r\n                                    })\r\n    \r\n                             }   \r\n                      )\r\n              .catch((err)=>\r\n                    {\r\n                      alert(err)\r\n                    })     \r\n            }\r\n        }\r\n         Fetchlistgame=()=>\r\n         {\r\n\r\n                \r\n            return(\r\n                            this.state.temparray.map((user)=>\r\n                            \r\n                                   {\r\n                                                if(new Date(user.timegame).toISOString!==null)\r\n                                                {   \r\n                                                    return(\r\n                                                    \r\n                                                            <ul key={user.uid}>   \r\n                                                            \r\n                                                                        <li>status: {user.statusnumber} xpoint:{user.xpoint} ypoint:{user.xpoint} xpoint:{user.xpoint}    status:{user.statusnumber}\r\n                                                                        {/* timegame:{user.timegame.toDate().toString()} */}\r\n                                                                          {/* { new firebase.firestore.fromMillis(user.timegame.milliseconds)} */}\r\n                                                                        </li>\r\n                                                                        \r\n                                                                </ul>\r\n                                                    )\r\n                                                }\r\n                                                else{\r\n                                                    return(\r\n                                                    \r\n                                                        <ul key={user.uid}>   \r\n                                                        \r\n                                                                    <li>status: {user.statusnumber} xpoint:{user.xpoint} ypoint:{user.xpoint} xpoint:{user.xpoint}    status:{user.statusnumber}/</li>\r\n                                                                    {/* timegame:  {new Date(user.timegame).toISOString}   </li> */}\r\n                                                                    \r\n                                                            </ul>\r\n                                                        )\r\n\r\n                                                    }                                 \r\n                                    }\r\n                    ))\r\n         }\r\n         \r\n        Changevideo=(e)=>\r\n        { \r\n            console.log(e.target.value)\r\n            // alert(          e.target.value)\r\n    // <this.Box1 index={a} sIndex={y}>\r\n    // </this.Box1>\r\n}\r\n         arraymaprange=()=>{\r\n         \r\n                                    return(\r\n                                                    this.state.temparray.map((a, i)=>{\r\n                                                                                            // console.log('test');\r\n                                                                                            //     console.log(a.userid,a.orderid,a.gameid)\r\n                                                                                                                        return (\r\n                                                                                                                            <ul key={a.uid}>\r\n                                                                                                                                <li>\r\n                                                                                                                                gameid:  {a.gameid}\r\n                                                                                                                                </li>\r\n                                                                                                                                <li>\r\n                                                                                                                                gameid:  {a.userid}\r\n                                                                                                                                </li>\r\n                                                                                                                                <li>\r\n                                                                                                                                <this.Fetchlistgame user={a.userid}/>\r\n                                                                                                                                </li>\r\n                                                                                                                    \r\n                                                                                                                                  \r\n                                                                                                                            </ul>\r\n                                                                                                                                )\r\n                                                                                         }\r\n                                                                                )\r\n                                                                                       \r\n                                        )\r\n                        }\r\n\r\n    render(){\r\n\r\n        return(\r\n            \r\n                        <div className=\"container\">\r\n                                        <div className=\"row\"> \r\n                                        \r\n                                        <label for=\"customRange2\" class=\"form-label\">เลื่อนเพื่อดู การเคลื่อนที่ของลำดับการกด</label>\r\n                                            \r\n                                        </div>        \r\n                                            <this.arraymaprange/>                                    \r\n                        </div>\r\n\r\n            \r\n        )\r\n\r\n\r\n    }\r\n   \r\n}\r\n\r\nexport default Showgame","import React from 'react'\r\nimport firestore from '../database/firebase'\r\n import firebase from 'firebase/app'\r\nimport Showgame from './Showgame'\r\n\r\n class login extends React.Component\r\n {\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={\r\n            user:null\r\n        }\r\n    }\r\n    \r\n    render()\r\n    {\r\n\r\n        return(\r\n            // <form onSubmit={this.props.changeuser}>\r\n            <div>\r\n                            <div className=\"flex-row justify-content-end\">\r\n                                        {this.props.users!==\"\"? this.props.users:null }\r\n                                        </div>\r\n                <div className=\"d-flex justify-content-start\">\r\n                            \r\n                                          \r\n                                                 <div className=\"flex-col\">\r\n                                                                     <div>\r\n                                                                     {/* {this.props.users!==\"\"?  null: <input className=\"form-control\" id=\"user\" value={this.props.users} onChange={this.props.changeusers}/>} */}\r\n                                                                     {this.props.users!==\"\"?  null: <input className=\"form-control\" id=\"user\" value={this.props.tempusers} onChange={this.props.changeusers}/>}\r\n                                                                        </div>   \r\n                                                                                    <div>\r\n                                                                                    {this.props.users!==\"\"?       null:<button  onClick={this.props.clickchangeusers} value={this.props.tempusers}>Login user</button>}\r\n                                                                                </div>\r\n                                                                           \r\n                                                                              </div>\r\n                 </div>\r\n                 </div>\r\n            )\r\n    }\r\n\r\n }\r\n export default login\r\n // componentDidMount(){\r\n            \r\n    //     // firestore.collection(\"users\").where(\"numbergame\",\"==\",this.props.gameid).get().then((res)=>{\r\n    //         // firestore.collection(\"users\").get()\r\n    //         firestore.collection(\"users\").where(\"numbergame\",\"==\",\"111\").get()\r\n    //         .then((doc)=>{\r\n                \r\n    //                         doc.forEach(doc=>\r\n    //                             {\r\n    //                                 console.log(doc.id)\r\n    //                                 console.log(doc.data())\r\n    //                             })\r\n\r\n    //                      }   \r\n    //               )\r\n    //       .catch((err)=>\r\n    //             {\r\n    //               alert(err)\r\n    //             })     \r\n    //      }","// import logo from './logo.svg';\nimport React ,{Useref} from 'react';\nimport './App.css';\nimport Box from './component/Box'\n import Header from './component/header'\nimport Showgame from './component/Showgame'\nimport Login from './component/login'\nclass App extends React.Component{\n\n      constructor(props){\n        super(props)\n        this.state={\n                newgameid:\"\",\n                timegame:\"\",\n                users:\"\",\n                 tempusers:\"\",\n                x:3,\n                y:3,\n                oncheck:true,\n                a:3,\n                b:3\n                \n                }\n          this.Check=this.Check.bind(this)\n          this.Firstmenu=this.Firstmenu.bind(this)\n                this.Validate=this.Validate.bind(this)\n                this.clickchangeusers=this.clickchangeusers.bind(this)\n          this.Changeuser=this.Changeuser.bind(this)\n      }\n\n        Changeuser=(e)=>\n        { \n           this.setState({tempusers:e.target.value})\n    //  alert(this.state.tempusers)\n\n        }\n      clickchangeusers=(e)=>\n      {\n    \n          \n          // e.preventdefault()\n          // var tempusers =document.getElementById('user').value\n        \n          this.setState({users:e.target.value})\n          //  alert(this.state.users)\n          var gameid= Math.floor(Math.random() * 1000000)\n          // alert(gameid)\n          this.setState({newgameid:gameid})\n      }\n\n      Firstmenu=()=>{\n        \n\n          return(  \n            \n          <div className=\"container\">\n             \n          <div className=\"col\">\n          โปรแกรม XO สำหรับทดสอบ\n          </div>\n         \n                                    <div className=\"row\">\n                                                      <div className=\"col\">\n                                                    <span> ใส่จำนวนแกน X </span>\n                                                    </div>\n                                                    <div className=\"col\">\n                                                    <input className=\"form-control\" value={this.state.a}  inputMode=\"numeric\" onChange={(e)=>this.setState({a:e.target.value})}/>\n                                                    </div>\n                                    </div>\n                                    <div className=\"row\">\n                                                      <div className=\"col\">\n                                                    <span> ใส่จำนวนแกน Y </span>\n                                                    </div>\n                                                    <div className=\"col\">\n                                                    <input className=\"form-control\" value={this.state.b}  inputMode=\"numeric\" onChange={(e)=>this.setState({b:e.target.value})}/>\n                                                    </div>\n                                    </div>\n                                    <div className=\"row mt-5\">\n                                                <button className=\"btn btn-success\" onClick={this.Validate}>ตกลง</button>\n                                              </div>\n                                              {/* <Box x=\"3\" y=\"3\" />  */}\n                                           \n                                              </div>\n                                              )  \n      }   \n          Validate=()=>{\n            if(this.state.a===this.state.b)   {\n              this.setState({x:this.state.a,y:this.state.b,oncheck:false})\n              }\n\n          }\n      Check=()=> \n      {\n      return(\n      <Box  x={this.state.x} y={this.state.y} users={this.state.users} newgameid={this.state.newgameid}/>    )}\n          render(){\n                return (\n                  \n                      <div>\n                  <Header/>   \n                  \n                  <Login  clickchangeusers={this.clickchangeusers} users={this.state.users} changeusers={this.Changeuser} tempusers={this.state.tempusers}/>\n                      <this.Firstmenu/>     \n                   <this.Check newxclick={this.state.x} newyclick={this.state.y }/>\n                   <Showgame newxclick={this.state.x} newyclick={this.state.y}  users={this.state.users}/>\n                      </div>\n                )\n        }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}